openapi: 3.1.0
info:
  title: OpenAPI for order system
  description: Title
  version: 1.0.0
tags:
  - name: Products
    description: Products endpoints
  - name: Orders
    description: Orders endpoints
servers:
  - url: "https://localhost:8080"

paths:
  /products/{productId}:
    get:
      tags:
        - Products
      parameters:
        - name: productId
          description: Identyfikator produkty
          in: path
          schema:
            type: string
      operationId: getProduct
      summary: Product
      description: Returns all pets from the system that the user has access to
      responses:
        "200":
          description: Dane produktu.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Nie znaleziono produktu o podanym id.
  /products:
    post:
      tags:
        - Products
      operationId: createProduct
      summary: Products
      requestBody:
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Dane produktu.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    get:
      tags:
        - Products
      operationId: getAllProducts
      summary: Products
      responses:
        "200":
          description: Dane produkt√≥w.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /orders/{orderId}:
    get:
      tags:
        - Orders
      operationId: getOrder
      summary: Get order by id.
      parameters: #TODO $ref
        - name: orderId
          in: path
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /orders/{orderId}/items: 
    post:
      tags:
        - Orders
      operationId: addOrderItem
      summary: Add item to order.
      parameters: #TODO $ref
        - name: orderId
          in: path
      requestBody:
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/AddOrderItem"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /orders/{orderId}/items/{productId}: 
    delete:
      tags:
        - Orders
      operationId: removeOrderItem
      summary: Remove item to order.
      parameters: #TODO $ref
        - name: orderId
          in: path
        - name: productId
          in: path
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /orders:
    post:
      tags:
        - Orders
      summary: Create order.
      operationId: createOrder
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"    
    get:
      tags:
        - Orders
      summary: Get all orders.
      operationId: getAllOrders
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          description: Identyfikator produktu
          type: string
        name:
          description: Nazwa produktu
          type: string
        price:
          description: Cena produktu
          type: number
          multipleOf: 0.01
      required:
        - id
        - name
        - price
    Order:
      type: object
      description: Order data.
      properties:
        id:
          description: Order id.
          type: string
        state:
          description: Order state.
          type: string
          format: enum
          enum: [ CREATED, FINISHED, ABANDONED ]
        items:
          $ref: "#/components/schemas/OrderItems"
        amount:
          description: Order amount.
          type: number
          multipleOf: 0.01
      required:
        - id
        - state
        - amount
    OrderItems:
      type: array
      description: Order Items.
      items:
        $ref: "#/components/schemas/OrderItem"
    OrderItem:
      type: object
      description: Order item.
      properties:
        productId:
          description: Product Id.
          type: string
        product:
          $ref: "#/components/schemas/Product"
        quantity:
          type: integer
          minimum: 1
        amount:
          description: Item amount.
          type: number
          multipleOf: 0.01
      required:
        - productId
        - product
        - quantity
        - amount
    AddOrderItem:
      properties:
        productId:
          description: Product Id.
          type: string
        quantity:
          type: integer
          minimum: 1
      required:
        - productId
        - quantity